name: ForkLoop CI/CD Pipeline

on:
  push:
    branches: [main, develop, "feature/*"]
  pull_request:
    branches: [main, develop]

jobs:
  # Lint and Code Quality Check
  lint:
    name: 🔍 Lint & Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check Prettier formatting
        run: npx prettier --check "src/**/*.{js,jsx,css,json}"

  # Build Test
  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/
          retention-days: 7

  # API Integration Tests
  api-tests:
    name: 🧪 API Integration Tests
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Start development server
        run: npm run dev &
        env:
          NODE_ENV: test

      - name: Wait for server
        run: npx wait-on http://localhost:3000 --timeout 60000

      - name: Install Playwright
        run: npx playwright install chromium

      - name: Run API integration tests
        run: |
          npx playwright eval "
            const { chromium } = require('@playwright/test');
            (async () => {
              const browser = await chromium.launch();
              const page = await browser.newPage();
              
              // Navigate to test dashboard
              await page.goto('http://localhost:3000/tests');
              await page.waitForSelector('.test-dashboard', { timeout: 10000 });
              
              // Test API connectivity
              const apiResult = await page.evaluate(() => {
                return window.testAPI ? window.testAPI.runQuickTest() : false;
              });
              
              console.log('API Test Result:', apiResult);
              
              if (!apiResult) {
                throw new Error('API connectivity test failed');
              }
              
              await browser.close();
              console.log('✅ API integration tests passed');
            })();
          "

  # Component Tests (Smoke Tests)
  component-tests:
    name: ⚡ Component Smoke Tests
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Start development server
        run: npm run dev &
        env:
          NODE_ENV: test

      - name: Wait for server
        run: npx wait-on http://localhost:3000 --timeout 60000

      - name: Install Playwright
        run: npx playwright install chromium

      - name: Run component smoke tests
        run: |
          npx playwright eval "
            const { chromium } = require('@playwright/test');
            (async () => {
              const browser = await chromium.launch();
              const page = await browser.newPage();
              
              // Test main app loads
              console.log('🏠 Testing main app...');
              await page.goto('http://localhost:3000');
              await page.waitForSelector('.main', { timeout: 10000 });
              
              // Test API test page loads
              console.log('🧪 Testing API test page...');  
              await page.goto('http://localhost:3000/api-test');
              await page.waitForSelector('.api-test', { timeout: 10000 });
              
              // Test auth test page loads
              console.log('🔐 Testing auth test page...');
              await page.goto('http://localhost:3000/auth-test');
              await page.waitForSelector('.auth-test', { timeout: 10000 });
              
              // Test test dashboard loads
              console.log('📊 Testing test dashboard...');
              await page.goto('http://localhost:3000/tests');
              await page.waitForSelector('.test-dashboard', { timeout: 10000 });
              
              await browser.close();
              console.log('✅ All component smoke tests passed');
            })();
          "

  # Security Audit
  security:
    name: 🛡️ Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD

  # Deploy to GitHub Pages (on main branch)
  deploy-gh-pages:
    name: 🚀 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build, api-tests, component-tests]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build for GitHub Pages
        run: npm run build
        env:
          NODE_ENV: production
          PUBLIC_URL: /forkloop_frontend

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          cname: forkloop.example.com # Optional: replace with your domain

  # Notification
  notify:
    name: 📢 Notify Results
    runs-on: ubuntu-latest
    needs: [lint, build, api-tests, component-tests, security]
    if: always()

    steps:
      - name: Report Status
        run: |
          echo "🏁 CI/CD Pipeline Complete"
          echo "Lint: ${{ needs.lint.result }}"
          echo "Build: ${{ needs.build.result }}"  
          echo "API Tests: ${{ needs.api-tests.result }}"
          echo "Component Tests: ${{ needs.component-tests.result }}"
          echo "Security: ${{ needs.security.result }}"

          if [[ "${{ contains(needs.*.result, 'failure') }}" == "true" ]]; then
            echo "❌ Some jobs failed"
            exit 1
          else
            echo "✅ All jobs completed successfully"
          fi
